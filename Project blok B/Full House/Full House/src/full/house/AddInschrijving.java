/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package full.house;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Tim
 */
public class AddInschrijving extends javax.swing.JFrame {

    Speler speler;
    Connection conn;
    
    /**
     * Creates new form Inschrijving2
     */
    public AddInschrijving(Speler speler, Connection conn) {
        initComponents();
        this.speler = speler;
        this.conn = conn;
        fillFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        voorlettersField = new javax.swing.JTextField();
        toernooiCB = new javax.swing.JComboBox();
        spelerIDField = new javax.swing.JTextField();
        naamField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        betaaldCB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        voorlettersField.setEditable(false);

        spelerIDField.setEditable(false);

        naamField.setEditable(false);

        jLabel3.setText("naam:");

        jLabel2.setText("speler ID:");

        jLabel4.setText("voorletters:");

        saveBtn.setText("Save");
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnMouseClicked(evt);
            }
        });

        jLabel1.setText("Nieuwe inschrijving");

        jLabel5.setText("toernooi ID:");

        cancelBtn.setText("Cancel");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });

        betaaldCB.setText("betaald");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelBtn))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(naamField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spelerIDField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                .addComponent(voorlettersField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(toernooiCB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(betaaldCB, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(208, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, saveBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spelerIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voorlettersField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(naamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toernooiCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(betaaldCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(cancelBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseClicked
        if (addInschrijving()) {
            JOptionPane.showMessageDialog(rootPane, "Speler is ingeschreven");
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_saveBtnMouseClicked

    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelBtnMouseClicked
    
    private void fillFields () {
        spelerIDField.setText("" + speler.ID);
        voorlettersField.setText(speler.voorletters);
        naamField.setText(speler.naam);
        getToernooien();
    }
    
    private void getToernooien () {
        String query = "SELECT toernooiID FROM Toernooi";
        try {
            PreparedStatement stat = conn.prepareStatement(query);
            ResultSet result = stat.executeQuery();
            while (result.next()) {
                int toernooiID = result.getInt("toernooiID");
                toernooiCB.addItem("" + toernooiID);
            }
            result.close();
            stat.close();
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
        }
    }
    
    private boolean addInschrijving () {
        if (checkInschrijving()) {
            String query = "INSERT INTO Inschrijving(spelerID, toernooiID, betaald)"
                    + "VALUES(?,?,?)";
            int toernooiID = Integer.parseInt(toernooiCB.getSelectedItem().toString());
            boolean betaald = betaaldCB.isSelected();
            try {
                PreparedStatement stat = conn.prepareStatement(query);
                stat.setInt(1, speler.ID);
                stat.setInt(2, toernooiID);
                stat.setBoolean(3, betaald);
                stat.executeUpdate();
                stat.close();
                return true;
            }
            catch (Exception e) {
                FullHouse.showDBError(e);
                return false;
            }
        }
        else {
            JOptionPane.showMessageDialog(rootPane, "Speler is al ingeschreven voor dit toernooi.", "Dubbele inschrijving", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean checkInschrijving () {
        String query = "SELECT * FROM Inschrijving WHERE spelerID=? AND toernooiID=?;";
        try {
            PreparedStatement stat = conn.prepareStatement(query);
            int spelerID = speler.ID;
            int toernooiID = Integer.parseInt(toernooiCB.getSelectedItem().toString());
            stat.setInt(1, spelerID);
            stat.setInt(2, toernooiID);
            ResultSet result = stat.executeQuery();
            if (result.next()) {
                return false;
            }
            else {
                return true;
            }
        }
        catch (SQLException | NumberFormatException e) {
            FullHouse.showDBError(e);
            return false;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox betaaldCB;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField naamField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField spelerIDField;
    private javax.swing.JComboBox toernooiCB;
    private javax.swing.JTextField voorlettersField;
    // End of variables declaration//GEN-END:variables
}
