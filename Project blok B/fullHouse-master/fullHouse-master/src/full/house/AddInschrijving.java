/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package full.house;

import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Tim
 */
public class AddInschrijving extends javax.swing.JFrame {

    int spelerID;
    
    /**
     * Creates new form Inschrijving2
     */
    public AddInschrijving(int spelerID) {
        initComponents();
        this.spelerID = spelerID;
        fillFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        voorlettersField = new javax.swing.JTextField();
        evenementCB = new javax.swing.JComboBox();
        spelerIDField = new javax.swing.JTextField();
        naamField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        betaaldCB = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        voorlettersField.setEditable(false);

        spelerIDField.setEditable(false);

        naamField.setEditable(false);

        jLabel3.setText("naam:");

        jLabel2.setText("speler ID:");

        jLabel4.setText("voorletters:");

        saveBtn.setText("Save");
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnMouseClicked(evt);
            }
        });

        jLabel1.setText("Nieuwe inschrijving");

        jLabel5.setText("toernooi ID:");

        cancelBtn.setText("Cancel");
        cancelBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelBtnMouseClicked(evt);
            }
        });

        betaaldCB.setText("betaald");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelBtn))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(naamField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spelerIDField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                                .addComponent(voorlettersField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(evenementCB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(betaaldCB, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(208, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelBtn, saveBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spelerIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voorlettersField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(naamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(evenementCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(betaaldCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(cancelBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Schrijft de speler in voor het geselecteerde toernooi.
     * Laat een dialog zien als de inschrijving succesvol is.
     * @param evt 
     */
    private void saveBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnMouseClicked
        if (addInschrijving()) {
            JOptionPane.showMessageDialog(rootPane, "Speler is ingeschreven");
            this.setVisible(false);
            this.dispose();
        }
    }//GEN-LAST:event_saveBtnMouseClicked
    
    /**
     * Annuleert de inschrijving.
     * @param evt 
     */
    private void cancelBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelBtnMouseClicked
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelBtnMouseClicked
    
    /**
     * Vult de textvelden met corresponderende waarden.
     */
    private void fillFields () {
        String query = "SELECT voorletters, naam FROM Speler WHERE spelerID = ?;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, spelerID);
            
            ResultSet result = stat.executeQuery();
            result.next();
            String voorletters = result.getString("voorletters");
            String naam = result.getString("naam");
            
            spelerIDField.setText("" + spelerID);
            voorlettersField.setText(voorletters);
            naamField.setText(naam);
            
            result.close();
            stat.close();
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
        }
        getToernooien();
    }
    
    /**
     * Haalt een lijst op met bestaande toernooien en vult een ComboBox hiermee.
     */
    private void getToernooien () {
        String query = "SELECT evenementID FROM Evenement;";
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            ResultSet result = stat.executeQuery();
            while (result.next()) {
                int evenementID = result.getInt("evenementID");
                evenementCB.addItem("" + evenementID);
            }
            result.close();
            stat.close();
        }
        catch (Exception e) {
            FullHouse.showDBError(e);
        }
    }
    
    /**
     * Voegt een inschrijving toe.
     * Laat een dialog zien als de speler al is ingeschreven voor dit toernooi.
     * @return Returns false als de inschrijving niet gelukt is.
     */
    private boolean addInschrijving () {
        String query = "INSERT INTO Inschrijving(spelerID, evenementID, isBetaald)"
                + "VALUES(?,?,?)";
        int evenementID = Integer.parseInt(evenementCB.getSelectedItem().toString());
        boolean isBetaald = betaaldCB.isSelected();
        try {
            Connection conn = SimpleDataSource.getConnection();
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, spelerID);
            stat.setInt(2, evenementID);
            stat.setBoolean(3, isBetaald);
            stat.executeUpdate();
            stat.close();
            return true;
        }
        catch (MySQLIntegrityConstraintViolationException e) {
            JOptionPane.showMessageDialog(rootPane, "Speler is al ingeschreven voor dit toernooi.", "Dubbele inschrijving", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        catch (SQLException e) {
            FullHouse.showDBError(e);
            System.out.println("d");
            return false;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox betaaldCB;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox evenementCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField naamField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField spelerIDField;
    private javax.swing.JTextField voorlettersField;
    // End of variables declaration//GEN-END:variables
}
